@page "/chat"
@inherits Meeteor.App.Components.StatefulComponent
@inject NavigationManager NavigationManager
@inject IAccessTokenProvider TokenProvider
@inject ChatProxy ChatProxy
@using Microsoft.AspNetCore.SignalR.Client
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Meeteor.App.Proxy
@using Meeteor.App.State

@attribute [Authorize]

<h1>Chat</h1>
<div class="form-group">
    <label>
        Message:
        <input @bind="MessageInput" size="50"/>
    </label>
</div>
<button @onclick="Send" disabled="@(!ChatProxy.IsConnected)">Send</button> @*TODO: connecting, connected, disconnected*@

<hr>

<ul id="messagesList">
    @foreach (var message in State.ChatMessages)
    {
        <li>
            <code>
                @($"{message.Timestamp} | {message.User}: {message.Content}")
            </code>
        </li>
    }
</ul>

@code {
    private string MessageInput { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await ChatProxy.ConnectAsync();
    }

    async Task Send()
    {
        await ActionCreators.Chat.Send(Store.Dispatch, ChatProxy, MessageInput);

        //return hubConnection.SendAsync(Methods.Chat.SendMessage, messageInput);
    }

    //public async ValueTask DisposeAsync()
    //{
    //    await hubConnection.DisposeAsync();
    //}
}